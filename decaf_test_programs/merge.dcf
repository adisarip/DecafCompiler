// merge sort
// Input:  A list of random integers
// Output: Sorted list of the input numbers.

class Program
{
    int a[10];
    int b[10];
    int N = 10;

    void merging(int low, int mid, int high)
    {
        int l1 = low;
        int l2 = mid+1;
        int i = low;
        for l1 <= mid && l2 <= high
        {
            if(a[l1] <= a[l2])
            {
                b[i] = a[l1++];
            }
            else
            {
                b[i] = a[l2++];
            }
        }
        
        for l1 <= mid
        {
            b[i++] = a[l1++];
        }

        for l2 <= high
        {
            b[i++] = a[l2++];
        }

        for i = low, i <= high
        {
            a[i] = b[i];
        }
    }

    void mergeSort(int low, int high)
    {
        int mid;
        if(low < high)
        {
            mid = (low + high) / 2;
            mergeSort(low, mid);
            mergeSort(mid+1, high);
            merging(low, mid, high);
        }
        else
        { 
            return;
        }
    }

    void main()
    {
        int i;
        callout ("printf", "List before sorting ... \n");
        for i=0,N
        {
            callout ("printf", "%d ", a[i]);
        }

        mergeSort(0, N);

        callout ("printf", "\nList after sorting ... \n");
        for i=0,N
        {
            callout ("printf", "%d ", a[i]);
        }
    }
}   


