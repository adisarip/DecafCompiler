// Binary Search
// Output: print FOUND if the number is present
//         print NOT FOUND if the number is not there

class BinarySearch
{
    int testData[100];
    void main()
    {
        int i,num,searchValue,N;
        int first,last,middle;
        int breakFlag;

        // Preparing Test Data
        N = 10;
        searchValue = 14;
        for i=0, N
        {
            testData[i] = i * 2; // 0 2 4 6 8 10 12 14 16 18
        }

        callout ("printf", "TestData: ");
        for i=0, N
        {
            callout ("printf", "%d ", testData[i]);
        }
        callout("printf", " || ");

        first = 0;  // starting index
        last = N-1; // ending index
        middle = (first + last)/2;
        breakFlag = 0;

        callout ("printf", "Searching for %d || ", searchValue);

        for i=first, last+1
        {
            if (testData[middle] < searchValue)
            {
                first = middle + 1;
            }
            else
            {
                if (testData[middle] == searchValue) 
                {
                    callout("printf", "Found %d at location %d !!!", searchValue, middle+1);
                    //break;
                    breakFlag = 1;
                }
                else
                {
                    last = middle - 1;
                }
            }

            middle = (first + last)/2;
            
            if (breakFlag == 1)
            {
                i = last;
            }
            else
            {
                i = first-1; // as i will be incremented automatically, hence adjusting its position
            }
        }
    }
}


